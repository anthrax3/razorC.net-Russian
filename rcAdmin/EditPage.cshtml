@{
    //fileManager
    Response.Cookies[Session.SessionID].Value = "True";
    Response.Cookies[Session.SessionID].Expires = DateTime.Now.AddHours(3);
    var fbURL= System.Web.VirtualPathUtility.ToAbsolute("~/tiny_mce/plugins/FileManager/Default.aspx?sessionid=") + Session.SessionID.ToString();
    
    //List all Layout files
    DirectoryInfo dirInfo = new DirectoryInfo(Server.MapPath("~/rcLayouts"));
    FileInfo[] fileInfo = dirInfo.GetFiles("_*.cshtml", SearchOption.TopDirectoryOnly  );

    // list all the body pages
    DirectoryInfo dirInfoBody = new DirectoryInfo(Server.MapPath("~/rcTemplates/Body"));
    FileInfo[] fileInfoBody = dirInfoBody.GetFiles("_*.cshtml", SearchOption.TopDirectoryOnly);

    var pId = Request["id"];
    var errMSG = "";
    
    var db = Database.Open("razorC");
    var sqlSelect = " Select * from rc_Pages where pId=@0";
    var data = db.QuerySingle(sqlSelect,pId);

    var pName = data.pName;
    var pTitle = data.pTitle;
    var pText = data.pText;
    var mTitle = data.mTitle;
    var mDescription = data.mDescription;
    var mKeywords = data.mKeywords;
    var pMasterPage = data.pMasterPage;
    var pEditDate = data.pEditDate;
    var pBody = data.pBody;
    var pBodyFile = data.pBodyFile;

    Page.Title = Html.Raw("razorC.net" + " <a href=\"WidgetsInSection.cshtml?pid=" + pId + "&pName=" + pName + "\" title=\"Widgets\">"
    + "<img src=\"images/widgets.gif\" alt=\"Widgets\" class=\"rcGC\" /></a>");
    
    if (IsPost){
        
        
         if (!Request["btnUpdate"].IsEmpty()){

             //create backup copy before update
             var sqlBackup = "Insert INTO rc_Backups (pwId, pwName, pwTitle, pwText, mTitle, mDescription, mKeywords, pMasterPage,pwDate, pBody, BType, pwFile) "
                + "values (@0, @1, @2, @3, @4, @5, @6, @7, @8, @9, @10, @11)";
             db.Execute(sqlBackup, pId, pName, pTitle, pText, mTitle, mDescription, mKeywords, pMasterPage, pEditDate, pBody, 'p', pBodyFile);
             
             //update record

        pName = Request["pName"];
        pTitle = Request["pTitle"];
        pText = Request.Unvalidated("pText");
        mTitle = Request["mTitle"];
        mDescription = Request["mDescription"];
        mKeywords = Request["mKeywords"];
        pMasterPage = Request["pMasterPage"];
        pEditDate = DateTime.Now;
        pBody = false;
        pBodyFile = Request["pBodyFile"];
        if(Request["pBody"] == "on"){
            pBody = true;
        }

        var sqlUpdate = "Update rc_Pages set "
            + "pTitle=@0, pText=@1, mTitle=@2, mDescription=@3, mKeywords=@4, pMasterPage=@5, pEditdate=@6, pBody=@7, pBodyFile=@8 "
            + "where pId=@9";

        try
        {
            db.Execute(sqlUpdate, pTitle, pText, mTitle, mDescription, mKeywords, pMasterPage, pEditDate, pBody, pBodyFile, pId);
            errMSG = "Данные сохранены !";
        }
        catch (Exception ex)
        {

            errMSG = ex.Message.ToString();
        }
         }else         {
             //from backup - load current version selected
             if (Request["rcBackup"].AsInt() ==0){Response.Redirect("EditPage.cshtml?id=" + pId);}
             //load from backup - post & btnUpdate is empty
             var loadFromBackup = "Select * from rc_Backups where Id=@0";
             var dataFromBackup = db.QuerySingle(loadFromBackup, Request["rcBackup"]);

             pName = dataFromBackup.pwName;
             pTitle = dataFromBackup.pwTitle;
             pText = dataFromBackup.pwText;
             mTitle = dataFromBackup.mTitle;
             mDescription = dataFromBackup.mDescription;
             mKeywords = dataFromBackup.mKeywords;
             pMasterPage = dataFromBackup.pMasterPage;
             pEditDate = dataFromBackup.pwDate;
             pBody = dataFromBackup.pBody;
             pBodyFile = dataFromBackup.pwFile;
         }
    }

    int numberOfBackups = 0;
    var selectBackups = "Select Id, pwDate from rc_Backups where bType='p' and pwID=@0 order by id Desc";
    var dataBackups = db.Query(selectBackups, pId);
    numberOfBackups = dataBackups.Count();
    //delete old backups, we want keep only top 5 backups per page/widget
    if (numberOfBackups > 5)
    {
        int TopRecords = numberOfBackups - 5;
        var deleteBackups = "Delete from rc_Backups where Id in (Select TOP " + TopRecords + " Id from rc_Backups where bType='p' and pwID=@0 order by Id Asc)";
        db.Execute(deleteBackups, pId);
    }


    }

@section head {
<!-- You can use any editor you want. We decided to use TinyMCE visit http://tinymce.moxiecode.com/ for licence and help -->
<!-- TinyMCE -->
<script src="@Href("~/tiny_mce/tiny_mce_src.js")" type="text/javascript"></script>
<script type="text/javascript">
        var language = navigator.userLanguage;
        tinyMCE.init({
            relative_urls: false,
            // General options
            mode: "textareas",
            theme: "advanced",
            height: "400",
            plugins: "safari,pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template",
            extended_valid_elements: "div[*],span[*],iframe[src|width|height|name|align]",

            // Theme options
            theme_advanced_buttons1: "save,newdocument,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,styleselect,formatselect,fontselect,fontsizeselect",
            theme_advanced_buttons2: "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
            theme_advanced_buttons3: "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
            theme_advanced_buttons4: "insertlayer,moveforward,movebackward,absolute,|,styleprops,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,pagebreak",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "left",
            theme_advanced_statusbar_location: "bottom",
            theme_advanced_resizing: true,
            file_browser_callback : "filebrowser",

            // Drop lists for link/image/media/template dialogs
            template_external_list_url: "lists/template_list.js",
            external_link_list_url: "lists/link_list.js",
            external_image_list_url: "lists/image_list.js",
            media_external_list_url: "lists/media_list.js"
        });
        function filebrowser(field_name, url, type, win) {

            fileBrowserURL = "@fbURL";

            tinyMCE.activeEditor.windowManager.open({
                title: "Ajax File Manager",
                url: fileBrowserURL,
                width: 950,
                height: 650,
                inline: 0,
                maximizable: 1,
                close_previous: 0
            }, {
                window: win,
                input: field_name,
                sessionid: '@Session.SessionID.ToString()'
            }
);
        }

    </script>
<!-- /TinyMCE -->

<script type="text/javascript">
    $(document).ready(function () {

        $("#rcBackup").change(function () {
            $("#editPage").submit();
        });

    });
</script>
}

<form action="" method="post" id="editPage">
 <fieldset>
        <legend>Редактирование страницы</legend>
        @errMSG
        Последние изменение: @pEditDate 
        <ol>
                <li>
                <label for="pName">Название (адрес):</label>
                <input type="text" name="pName" id="pName" value="@pName" readonly="readonly" maxlength="100" /> <img src="images/help.gif" alt="help" title="Название страницы. Вы не можете изменить его." />
                </li>

               <li>
                <label for="pMasterPage">Шаблон:</label>
                <select id="pMasterPage" name="pMasterPage">
               @foreach (var f in fileInfo)
               {
                <option value="@f.Name" @if (pMasterPage == f.Name)
                                        {<text>selected="selected"</text>}>@rcFunctions.CleanRCNames(f.Name)</option>
               }
                </select>  <img src="images/help.gif" alt="Помощь" title="Макет / темы, которые razorC будет использовать для отображения страницы. Все макеты в папке rcLayouts - вы можете изменить / модифицировать их под свои нужды" />
            </li>

                <li>
                <label for="pTitle">Имя:</label>
                <input type="text" name="pTitle" id="pTitle" value="@pTitle"  maxlength="250" /> <img src="images/help.gif" alt="help" title="Название страницы. В зависимости от шаблона для тела раздел (расположенный в rcTemplates\Body\ folder), он будет или не будет виден конечному пользователю" />
                </li>
                <li>
                <label for="pBody">Тело шаблона:</label>
                 <select id="pBodyFile" name="pBodyFile">
               @foreach (var f in fileInfoBody)
               {
                <option value="@f.Name" @if (pBodyFile == f.Name)
                                        {<text>selected="selected"</text>}>@rcFunctions.CleanRCNames(f.Name)</option>
               }
                </select>  <img src="images/help.gif" alt="Помощь" title="Шаблон, который будет использоваться для отображения части тела вашей страницы." />
                Содержимое:<input id="pBody" name="pBody" type="checkbox" @if (pBody)
                                                                           {<text>checked="checked"</text>} /> <img src="images/help.gif" alt="Помощь" title="Should be selected for most of the pages, unless you need page that ONLY renders widgets in sections..." />
                </li>
            </ol>
            <textarea id="pText" name="pText" cols="80" rows="15">@pText</textarea>
     <input type="submit" name="btnUpdate" value="Обновить" />
      <select id="rcBackup" name="rcBackup">
     <option value="-1">Load from backup</option>
               @foreach (var f in dataBackups.Take(5) )
               {
                <option value="@f.Id">@f.pwDate</option>
               }
          <option value="0">Загрузить текущую версию</option>
                </select> <img src="images/help.gif" alt="Помощь" title="Загрузка контента из резервной копии. Каждый раз, когда вы обновляете виджет / страницу razorC создаст резервную копию, виджета / страницы. По умолчанию 5 последних версий виджетов / страниц хранятся в таблице rc_Backups." />
       
</fieldset> 


<fieldset>
        <legend>Редактировать мета-теги</legend>
        <ol>
                <li>
                <label for="mTitle">Название:</label>
                <input type="text" name="mTitle" id="mTitle" value="@mTitle" maxlength="100" /> <img src="images/help.gif" alt="help" title="Meta тег: Title" />
                </li>
                <li>
                <label for="mDescription">Описание:</label>
                <input type="text" name="mDescription" id="mDescription" value="@mDescription" maxlength="200" /> <img src="images/help.gif" alt="help" title="Meta тег: Description" />
                </li>
                <li>
                <label for="mKeywords">Ключевые слова:</label>
                <input type="text" name="mKeywords" id="mKeywords" value="@mKeywords" maxlength="200" /> <img src="images/help.gif" alt="help" title="Meta тег: keywords" />
                </li>
                </ol>
                </fieldset>
</form>